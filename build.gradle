/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'guoshunw' at '14-5-4 下午3:57' with Gradle 1.11
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.11/userguide/tutorial_java_projects.html
 */

buildscript{
    ext{
        springBootVersion = '1.1.0.BUILD-SNAPSHOT'
    }
    repositories {
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'gs-messaging-stomp-websocket'
    version =  '0.1.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // NOTE: You should declare only repositories that you need here

    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }

}

// In this section you declare the dependencies for your production and test code
dependencies {
    configurations {
        insecure.exclude module: 'spring-boot-starter-security'
    }
    compile "org.springframework.boot:spring-boot-starter-websocket"
    compile "org.springframework:spring-messaging"

    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-freemarker"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.jolokia:jolokia-core"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.

    testCompile "org.springframework.boot:spring-boot-starter-test"
    insecure configurations.runtime
}

// Slightly odd requirement (package a jar file as an insecure app, exlcuding Spring Security)
// just to demonstrate the "customConfiguration" feature of the Boot gradle plugin.

springBoot {
    customConfiguration = "insecure"
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
